// <auto-generated />
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace tarea9.Migrations
{
    [DbContext(typeof(iglesiaContext))]
    [Migration("20201108221630_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("DB.Datos_academicos", b =>
                {
                    b.Property<int>("Datos_academicosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nivel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Suspendido")
                        .HasColumnType("TEXT");

                    b.Property<int>("integranteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Datos_academicosId");

                    b.HasIndex("integranteId");

                    b.ToTable("Datos_Academicos");
                });

            modelBuilder.Entity("DB.Datos_academicos_razon", b =>
                {
                    b.Property<int>("Datos_academicos_razonid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Datos_academicosId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Razon")
                        .HasColumnType("TEXT");

                    b.HasKey("Datos_academicos_razonid");

                    b.HasIndex("Datos_academicosId");

                    b.ToTable("Datos_Academicos_Razons");
                });

            modelBuilder.Entity("DB.Datos_eclesiasticos", b =>
                {
                    b.Property<int>("Datos_eclesiasticosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Denominacion_religiosa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Diciplinado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha_aceptacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha_bautismo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha_conversion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Funcion_religiosa")
                        .HasColumnType("TEXT");

                    b.Property<string>("Iglesia_anterior")
                        .HasColumnType("TEXT");

                    b.Property<string>("Metas")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ministerio_fruto")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ministerio_llamado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ministerios_servidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre_iglesiaA")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre_pastorA")
                        .HasColumnType("TEXT");

                    b.Property<string>("Respaldo_estudios")
                        .HasColumnType("TEXT");

                    b.Property<int>("integranteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Datos_eclesiasticosId");

                    b.HasIndex("integranteId");

                    b.ToTable("Datos_Eclesiasticos");
                });

            modelBuilder.Entity("DB.Datos_eclesiasticos_disciplina", b =>
                {
                    b.Property<int>("Datos_eclesiasticos_disciplinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Datos_eclesiasticosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("cantidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("causa")
                        .HasColumnType("TEXT");

                    b.HasKey("Datos_eclesiasticos_disciplinaId");

                    b.HasIndex("Datos_eclesiasticosId");

                    b.ToTable("Datos_Eclesiasticos_Disciplinas");
                });

            modelBuilder.Entity("DB.Datos_familiares", b =>
                {
                    b.Property<int>("Datos_familiaresId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hijos")
                        .HasColumnType("TEXT");

                    b.Property<int>("N_hijos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pareja")
                        .HasColumnType("TEXT");

                    b.Property<int>("integranteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Datos_familiaresId");

                    b.HasIndex("integranteId");

                    b.ToTable("Datos_Familiares");
                });

            modelBuilder.Entity("DB.Datos_laborales", b =>
                {
                    b.Property<int>("Datos_laboralesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Empresa_nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ocupacion_actual")
                        .HasColumnType("TEXT");

                    b.Property<string>("Profesion")
                        .HasColumnType("TEXT");

                    b.Property<long>("Telefono")
                        .HasColumnType("INTEGER");

                    b.Property<int>("integranteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Datos_laboralesId");

                    b.HasIndex("integranteId");

                    b.ToTable("Datos_Laborales");
                });

            modelBuilder.Entity("DB.Integrante", b =>
                {
                    b.Property<int>("integranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .HasColumnType("TEXT");

                    b.Property<long>("Celular")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ciudad_nacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ciudad_residencia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Correo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Documento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fecha_nacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais_nacimiento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pais_residencia")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .HasColumnType("TEXT");

                    b.Property<long>("Telefono")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo_documento")
                        .HasColumnType("TEXT");

                    b.HasKey("integranteId");

                    b.ToTable("integrantes");
                });

            modelBuilder.Entity("DB.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<string>("foto")
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DB.Datos_academicos", b =>
                {
                    b.HasOne("DB.Integrante", "integrante")
                        .WithMany("Datos_Academicos")
                        .HasForeignKey("integranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Datos_academicos_razon", b =>
                {
                    b.HasOne("DB.Datos_academicos", "Datos_Academicos")
                        .WithMany("Datos_Familiares")
                        .HasForeignKey("Datos_academicosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Datos_eclesiasticos", b =>
                {
                    b.HasOne("DB.Integrante", "integrante")
                        .WithMany("Datos_Eclesiasticos")
                        .HasForeignKey("integranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Datos_eclesiasticos_disciplina", b =>
                {
                    b.HasOne("DB.Datos_eclesiasticos", "datos_Eclesiasticos")
                        .WithMany("Datos_Eclesiasticos_Disciplinas")
                        .HasForeignKey("Datos_eclesiasticosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Datos_familiares", b =>
                {
                    b.HasOne("DB.Integrante", "integrante")
                        .WithMany("Datos_Familiares")
                        .HasForeignKey("integranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DB.Datos_laborales", b =>
                {
                    b.HasOne("DB.Integrante", "integrante")
                        .WithMany("Datos_Laborales")
                        .HasForeignKey("integranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
