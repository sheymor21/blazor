#pragma checksum "C:\P3\tarea9\Pages\Update.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "eab4a0da59f6d2962231265da48ba3fbb86eb7ae"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace tarea9.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\P3\tarea9\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\P3\tarea9\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\P3\tarea9\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\P3\tarea9\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\P3\tarea9\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\P3\tarea9\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\P3\tarea9\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\P3\tarea9\_Imports.razor"
using tarea9;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\P3\tarea9\_Imports.razor"
using tarea9.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\P3\tarea9\_Imports.razor"
using DB;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\P3\tarea9\_Imports.razor"
using sistema;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/update")]
    public partial class Update : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 977 "C:\P3\tarea9\Pages\Update.razor"
 
    int id{get;set;}
    int cambio = 1;
    iglesiaContext db = new iglesiaContext();

    almacen g = new almacen();
    tictac T = new tictac();
    private void back()
    {
        navi.NavigateTo("/menu");
    }

    private void vol()
    {
        cambio = 1;
    }

    private void editar()
    {
        int id1 = 0;
        int id2 =0;
        bool pasar = false;
        foreach(var item in db.integrantes.OrderBy(b=>b.integranteId).ToList())
        {
            if(item.integranteId == id)
            {
                pasar = true;
                g.Nombre = item.Nombre;
                g.Apellido = item.Apellido;
                g.Sexo =item.Sexo;
                g.Fecha_nacimiento = Convert.ToDateTime(item.Fecha_nacimiento);
                g.Pais_nacimiento = item.Pais_nacimiento;
                g.Ciudad_nacimiento =item.Ciudad_nacimiento;
                g.Pais_residencia = item.Pais_residencia;
                g.Ciudad_residencia =item.Ciudad_residencia;
                g.Direccion = item.Direccion;
                g.Telefono= item.Telefono;
                g.Celular = item.Celular;
                g.Correo = item.Correo;
                g.Tipo_documento =item.Tipo_documento;
                g.Documento =item.Documento;
            }
        }

        foreach(var item2 in db.Datos_Academicos.OrderBy(b=>b.Datos_academicosId).ToList())
        {
            if(item2.integranteId == id)
            {
                id1 = item2.Datos_academicosId;
                g.Nivel =  item2.Nivel;
                g.Suspendido= item2.Suspendido;
                
            }
        }

        foreach(var item3 in db.Datos_Academicos_Razons.OrderBy(b=>b.Datos_academicosId).ToList())
        {
            if(item3.Datos_academicosId == id1)
            {

            g.Razon = item3.Razon;
            }
        }

        foreach(var item4 in db.Datos_Eclesiasticos.OrderBy(b=>b.integranteId).ToList())
        {
            if(item4.integranteId == id)
            {
                id2 = item4.Datos_eclesiasticosId;
            g.Fecha_aceptacion = Convert.ToDateTime(item4.Fecha_aceptacion);
            g.Fecha_conversion = Convert.ToDateTime(item4.Fecha_conversion);
            g.Fecha_bautismo = Convert.ToDateTime(item4.Fecha_bautismo);
            g.Denominacion_religiosa = item4.Denominacion_religiosa;
            g.Nombre_iglesiaA = item4.Nombre_iglesiaA;
            g.Nombre_pastorA = item4.Nombre_pastorA;
            g.Iglesia_anterior = item4.Iglesia_anterior;
            g.Diciplinado = item4.Diciplinado;
            g.Funcion_religiosa = item4.Funcion_religiosa;
            g.Ministerio_fruto = item4.Ministerio_fruto;
            g.Ministerio_llamado = item4.Ministerio_llamado;
            g.Ministerios_servidos = item4.Ministerios_servidos;
            g.Metas = item4.Metas;
            g.Respaldo_estudios = item4.Respaldo_estudios;
            }

        }

        foreach(var item5 in db.Datos_Eclesiasticos_Disciplinas.OrderBy(b=>b.Datos_eclesiasticosId).ToList())
        {
            if(item5.Datos_eclesiasticosId == id2)
            {

            g.cantidad = item5.cantidad;
            g.causa = item5.causa;
            }
        }


       foreach(var item6 in db.Datos_Laborales.OrderBy(b=>b.integranteId).ToList())
       {
           if(item6.integranteId == id)
           {

           g.Profesion = item6.Profesion;
           g.Empresa_nombre = item6.Empresa_nombre;
           g.Ocupacion_actual = item6.Ocupacion_actual;
           g.Telefono_empresa = item6.Telefono;
           }

       }
        if(pasar)
        {
        cambio = 2;

        }
    }

    private void guardar()
    {
        var upt = db.integrantes.OrderBy(b=>b.integranteId).Where(s=>s.integranteId==id).First();

        upt.Nombre = g.Nombre;
        upt.Apellido = g.Apellido;
        upt.Sexo = g.Sexo;
        upt.Fecha_nacimiento = g.Fecha_nacimiento.ToShortDateString();
        upt.Pais_nacimiento = g.Ciudad_nacimiento;
        upt.Pais_residencia = g.Pais_residencia;
        upt.Ciudad_residencia = g.Ciudad_residencia;
        upt.Direccion = g.Direccion;
        upt.Telefono = g.Telefono;
        upt.Celular = g.Celular;
        upt.Correo = g.Correo;
        upt.Tipo_documento = g.Tipo_documento;
        upt.Documento = g.Documento;
        upt.Ciudad_nacimiento = g.Ciudad_nacimiento;
        db.SaveChanges();
        cambio = 2;
  

    
    }

    private void guardarP()
    {
        var upc = db.Datos_Laborales.OrderBy(b=>b.integranteId).Where(s=>s.integranteId==id).First();
           upc.Empresa_nombre = g.Empresa_nombre;
            upc.Ocupacion_actual = g.Ocupacion_actual;
            upc.Profesion = g.Profesion;
            upc.Telefono = g.Telefono_empresa;
            db.SaveChanges();
    }
     private void cerrar()
    {
        navi.NavigateTo("/");
    }
    private void guardarF()
    {
        var upa = db.Datos_Familiares.OrderBy(b=>b.integranteId).Where(s=>s.integranteId==id).First();
         upa.Estado = g.Estado;
            upa.Hijos = g.Hijos;
            upa.N_hijos = g.N_hijos;
            upa.Pareja = g.Pareja;
            db.SaveChanges();
            cambio = 2;
    }

    private void guardarA()
    {
        var upf = db.Datos_Academicos.OrderBy(b=>b.integranteId).Where(s=>s.integranteId==id).First();
        var upf2 = db.Datos_Academicos_Razons.OrderBy(b=>b.Datos_academicosId).Where(s=>s.Datos_academicosId==id).First();
         upf.Nivel = g.Nivel;
            upf.Suspendido = g.Suspendido;
            upf2.Razon = g.Razon;
            db.SaveChanges();
            cambio = 2;
    }

    private void guardarR()
    {
            var upd = db.Datos_Eclesiasticos.OrderBy(b=>b.integranteId).Where(s=>s.integranteId==id).First();
            int id4 = upd.Datos_eclesiasticosId;
            var upd2 = db.Datos_Eclesiasticos_Disciplinas.ToList();

            analizis();
            upd.Diciplinado =g.Diciplinado;
            upd.Denominacion_religiosa = g.Denominacion_religiosa;
            upd.Fecha_aceptacion = g.Fecha_aceptacion.ToShortDateString();
            upd.Fecha_bautismo = g.Fecha_bautismo.ToShortDateString();
            upd.Fecha_conversion = g.Fecha_conversion.ToShortDateString();
            upd.Funcion_religiosa = g.Funcion_religiosa;
            upd.Ministerio_fruto =g.Ministerio_fruto;
            upd.Ministerio_llamado= g.Ministerio_llamado;
            upd.Ministerios_servidos = g.Ministerios_servidos;
            upd.Iglesia_anterior = g.Iglesia_anterior;
            upd.Metas = g.Metas;
            upd.Respaldo_estudios = g.Respaldo_estudios;
            upd.Nombre_pastorA =g.Nombre_pastorA;
            upd.Nombre_iglesiaA = g.Nombre_iglesiaA;
            foreach(var item in upd2)
            {
                if(item.Datos_eclesiasticosId == id4)
                {
                item.cantidad = g.cantidad;
                item.causa = g.causa;

                }
            }
            db.SaveChanges();
            cambio = 2;
    }

    private void personales()
    {
        cambio = 3;
    }
    private void academicas()
    {
        cambio = 7;
    }
    private void religiosas()
    {
        cambio = 6;
    }
    private void profesional()
    {
        cambio = 5;
    }
    private void familia()
    {
        cambio = 4;
    }
    private void backs()
    {
        cambio = 2;
    }
    private void analizis()
    {

        if(T.ocupa)
        {
            g.Funcion_religiosa +=  " Pastor ";
        }
        else if(T.ocupa2)
        { 
            g.Funcion_religiosa += " Anciano ";
        }
        else if(T.ocupa3)
        {
            g.Funcion_religiosa += " Diacono ";
        }
        else if(T.ocupa4)
        {
            g.Funcion_religiosa += " Misionero ";
        }
        else if(T.ocupa5)
        {
            g.Funcion_religiosa += " Lider de Escuela Dominical ";
        }
        else if(T.ocupa6)
        {
            g.Funcion_religiosa += " Lider de Minist. de Jovenes ";
        }
        else if(T.ocupa7)
        {
            g.Funcion_religiosa += " Lider de Minist. de Caballeros ";
        }
        else if(T.ocupa8)
        {
            g.Funcion_religiosa += " Lider de Minist. de Damas" ;
        }
        else if(T.ocupa9)
        {
            g.Funcion_religiosa += " Lider de Minist. de Niños ";
        }
        else if(T.ocupa10)
        {
            g.Funcion_religiosa += " Lider de Minist. de Matrimonios ";
        }
        else if(T.ocupa11)
        {
            g.Funcion_religiosa += " Lider de grupo pequeño ";
        }


    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private NavigationManager navi { get; set; }
    }
}
#pragma warning restore 1591
